//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetEventWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(AssetEvent));
		L.RegVar("CheckLoadAssetsFinish", get_CheckLoadAssetsFinish, null);
		L.RegVar("CheckLoad", get_CheckLoad, null);
		L.RegVar("HunkRes", get_HunkRes, null);
		L.RegVar("HunkMutiRes", get_HunkMutiRes, null);
		L.RegVar("HunkScences", get_HunkScences, null);
		L.RegVar("ReleaseSingleObj", get_ReleaseSingleObj, null);
		L.RegVar("ReleaseBundleObjes", get_ReleaseBundleObjes, null);
		L.RegVar("ReleaseScenceObjes", get_ReleaseScenceObjes, null);
		L.RegVar("ReleaseBundleAndObject", get_ReleaseBundleAndObject, null);
		L.RegVar("ReleaseSingleBundle", get_ReleaseSingleBundle, null);
		L.RegVar("ReleaseScenceBundle", get_ReleaseScenceBundle, null);
		L.RegVar("ReleaseAll", get_ReleaseAll, null);
		L.RegVar("MaxValue", get_MaxValue, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckLoadAssetsFinish(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.CheckLoadAssetsFinish);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckLoad(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.CheckLoad);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HunkRes(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.HunkRes);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HunkMutiRes(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.HunkMutiRes);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HunkScences(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.HunkScences);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseSingleObj(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseSingleObj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseBundleObjes(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseBundleObjes);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseScenceObjes(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseScenceObjes);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseBundleAndObject(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseBundleAndObject);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseSingleBundle(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseSingleBundle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseScenceBundle(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseScenceBundle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReleaseAll(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.ReleaseAll);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxValue(IntPtr L)
	{
		ToLua.Push(L, AssetEvent.MaxValue);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		AssetEvent o = (AssetEvent)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

